/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Building as PrismaBuilding,
  Room as PrismaRoom,
} from "@prisma/client";

export class BuildingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BuildingCountArgs, "select">): Promise<number> {
    return this.prisma.building.count(args);
  }

  async buildings<T extends Prisma.BuildingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BuildingFindManyArgs>
  ): Promise<PrismaBuilding[]> {
    return this.prisma.building.findMany<Prisma.BuildingFindManyArgs>(args);
  }
  async building<T extends Prisma.BuildingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BuildingFindUniqueArgs>
  ): Promise<PrismaBuilding | null> {
    return this.prisma.building.findUnique(args);
  }
  async createBuilding<T extends Prisma.BuildingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BuildingCreateArgs>
  ): Promise<PrismaBuilding> {
    return this.prisma.building.create<T>(args);
  }
  async updateBuilding<T extends Prisma.BuildingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BuildingUpdateArgs>
  ): Promise<PrismaBuilding> {
    return this.prisma.building.update<T>(args);
  }
  async deleteBuilding<T extends Prisma.BuildingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BuildingDeleteArgs>
  ): Promise<PrismaBuilding> {
    return this.prisma.building.delete(args);
  }

  async findRooms(
    parentId: string,
    args: Prisma.RoomFindManyArgs
  ): Promise<PrismaRoom[]> {
    return this.prisma.building
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .rooms(args);
  }
}
